services:
  client-backend:
    container_name: spring-application
    image: backend:0.1.1
    build:
      context: backend
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - storage-service
      - service-db
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://service-db:5432/profitsoft
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - jobify-network
  frontend:
    container_name: react-application
    image: frontend:0.1.1
    build:
      context: frontend
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    networks:
      - jobify-network
  service-db:
    image: postgres:16
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: profitsoft
    ports:
      - "5432:5432"
    networks:
      - jobify-network
  storage-service:
    container_name: storage-service
    depends_on:
      - minio
    image: storage-service:1.0.0
    build:
      context: storage-service
      dockerfile: ./Dockerfile
    ports:
      - "3002:3002"
    networks:
      - jobify-network
    environment:
      SERVER_PORT: 3002
      S3_ENDPOINT: minio
      S3_PORT: 9000
      S3_USE_SSL: false
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
  minio:
    container_name: minio_s3
    image: minio/minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command:
      - server
      - /data
    networks:
      - jobify-network
  nginx:
    container_name: nginx
    depends_on:
      - minio
      - storage-service
    ports:
      - "8081:80"
    build:
      context: nginx
      dockerfile: ./Dockerfile
    environment:
      STORAGE_SERVICE_HOST: storage-service
      STORAGE_SERVICE_PORT: 3002
      S3_HOST: minio
      S3_PORT: 9000
    networks:
      - jobify-network
networks:
    jobify-network:
        driver: bridge